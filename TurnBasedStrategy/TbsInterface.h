// Базовый интерфейс от которого наследуются "конкретные интерфейсы"(ки) игровых
// объектов(иб) таких как наука, армия, экономика... Реализуется чисто
// виртуальным классом (полиморфизм) через этот класс происходит взаимодействие
// ИБ с движкомы (выполнение команды ход от движка),взаимодествие с клиентами
// передача значений и вызовы методов их изменений
// 
//  описание базового интерфейса:
//  к.и. содержат логику(методы), данные объектов ( наука армия)
//  движок выполняет(синхронизирует) ход для всех объектов( через их к.и (посредствам полим))
//  к.и. предоставляют методы для ИИ
//
#ifndef TBS_INTERFACE   // защита от множественного включения
#define TBS_INTERFACE
//TODO: сортировку в порядке значимости при расчете хода ( например сначала война-армия, потом
//	территория, потом население, потом посев-экономика, потом наука
//TODO: взаимодействие игр. объектов
//	получение параметров
//	типовые: карта-изменение границ в рез боя
//		армия-изменение боеспособности в рез повышения уровня науки
//		изменние количества солдат(едениц) в рез хоз деятельности(экономика)
//		изм кол-ва ученых ...
//		экономика-выращено зерна в рез засеивания территории
//		TODO: pure virtual ???? virtual func()=0 ?????
//		or some virtual func ???
class TbsInterface {
  virtual void NextTurn(); // реализовывает движок
  virtual void NextTurnObj(); // реализовывает объект (выполняет логику расчета хода)
  virtual void CreateObj(); // реализовывает движок
  virtual void GetGameObjList(); // получить список игровых объектов
  virtual void View(); // отображение ( реализ к.и)
  virtual void SendMess(); // созд сообщение для сети полную копию
  virtual void GetDifference(); // создание разницы состояния объекта для отправки по сети
  virtual void SendMessDiff(); //(движ)созд сообщение для сети с изменениями для текущего хода
  // получать показывать методы конкр интерфейсов
  // получить список конкретных инф
  // вирт метод считать
  // вир получить конкр инф
};
#endif
